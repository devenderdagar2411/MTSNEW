-- Step 1: Load source data with all necessary fields
WITH source_data AS (
    SELECT
        -- Key fields
        CAST(TRIM(W1STORE) AS NUMBER(3, 0)) AS STORE_NUMBER,
        TRIM(W1FTYP) AS FORM_TYPE_CODE,
        TRIM(W1POSPR) AS POS_PREFIX,
        CAST(TRIM(W1WONO) AS NUMBER(10, 0)) AS WORK_ORDER_NUMBER,
        
        -- Date fields
        TRY_TO_DATE(TRIM(W1TRDT), 'YYYYMMDD') AS TRANSACTION_DATE,
        TRY_TO_DATE(TRIM(W1OTDT), 'YYYYMMDD') AS ORIGIN_TRANSACTION_DATE,
        TRY_TO_DATE(TRIM(W1PRDT), 'YYYYMMDD') AS PRINT_DT,
        
        -- Dimension references
               
        CAST(TRIM(W1SRST) AS NUMBER(3, 0)) AS SALES_REP_STORE_NUMBER,
        CAST(TRIM(W1SLRP) AS NUMBER(10, 0)) AS SALES_REP_NUMBER,
        CAST(TRIM(W1CUST) AS NUMBER(10, 0)) AS CUSTOMER_NUMBER,
        CAST(TRIM(W1NAVD) AS NUMBER(10, 0)) AS NATIONAL_ACCOUNT_VENDOR_NUMBER,
        TRIM(W1VHST) AS VEHICLE_STATUS,
        CAST(TRIM(W1SHIP) AS NUMBER(10, 0)) AS SHIPPING_TO_NUMBER,
        
        -- Customer information
        TRIM(W1NAME) AS CUSTOMER_NAME,
        TRIM(W1ADD1) AS ADDRESS_LINE_1,
        TRIM(W1ADD2) AS ADDRESS_LINE_2,
        TRIM(W1ADD3) AS ADDRESS_LINE_3,
        TRIM(W1CITY) AS CITY,
        TRIM(W1ST) AS STATE,
        TRIM(W1ZIP) AS ZIP_CODE,
        TRIM(W1WKPH) AS WORK_PHONE,
        TRIM(W1WKXT) AS WORK_PHONE_EXT,
        TRIM(W1HMPH) AS HOME_PHONE,
        CAST(TRIM(W1TERM) AS NUMBER(3, 0)) AS TERMS_CODE,
        CAST(TRIM(W1TAXC) AS NUMBER(3, 0)) AS TAX_CODE,
        CAST(TRIM(W1TXDS) AS NUMBER(10, 0)) AS TAX_DISTRICT_CODE,
        CAST(TRIM(W1BILL) AS NUMBER(3, 0)) AS BILLING_CODE,
        TRIM(W1DRVR) AS DRIVER_NUMBER,
        TRIM(W1PONO) AS PURCHASE_ORDER_NUMBER,
        
        -- Shipping information
        TRIM(W1SHNM) AS SHIPPING_NAME,
        TRIM(W1SHAD1) AS SHIP_ADDRESS_1,
        TRIM(W1SHAD2) AS SHIP_ADDRESS_2,
        TRIM(W1SHAD3) AS SHIP_ADDRESS_3,
        TRIM(W1SHCTY) AS SHIP_CITY,
        TRIM(W1SHST) AS SHIP_STATE,
        TRIM(W1SHZIP) AS SHIP_ZIP,
        
        -- Origin information
        W1OFMT
         CAST(TRIM(W1OFMT) AS NUMBER(20, 0)) AS ORIGIN_FORM_TYPE_NUMBER,
        CAST(TRIM(W1ORSR) AS NUMBER(20, 0)) AS ORIGIN_SALES_REP_STORE_NUMBER,
        CAST(TRIM(W1ORSL) AS NUMBER(20, 0)) AS ORIGIN_SALES_REP_NUMBER,
        TRIM(W1WOST) AS WORK_ORDER_STATUS,
        
        -- Flag fields
        TRIM(W1HOLD) AS HOLD_FLAG,
        TRIM(W1QASK) AS QUESTION_ASKED_FLAG,
        TRIM(W1COMM) AS COMMENT_FLAG,
        TRIM(W1ACTR) AS ACCT_REVERSAL_FLAG,
        TRIM(W1PMNT) AS PAYMENT_FLAG,
        TRIM(W1PMTP) AS PAYMENT_TYPE_NAME,
        
        -- Fact fields (measures)
        CAST(TRIM(W1TXEX) AS NUMERIC(12,2)) AS TOTAL_TAX_EXEMPT_AMT,
        CAST(TRIM(W1TXBL) AS NUMERIC(12,2)) AS TOTAL_TAXABLE_AMT,
        CAST(TRIM(W1STAX) AS NUMERIC(12,2)) AS SALES_SALES_TAX_AMT,
        CAST(TRIM(W1TAMT) AS NUMERIC(12,2)) AS TOTAL_AMOUNT,
        CAST(TRIM(W1EXTA) AS NUMERIC(12,2)) AS TOTAL_EXTENDED_AMT,
        CAST(TRIM(W1EXTC) AS NUMERIC(12,2)) AS TOTAL_EXTENDED_COST_AMT,
        CAST(TRIM(W1EXTG) AS NUMERIC(12,2)) AS TOTAL_EXTENDED_GP_AMT,
        CAST(TRIM(W1EXCG) AS NUMERIC(12,2)) AS TOTAL_EXTENDED_COST_GP_AMT,
        CAST(TRIM(W1TGPA) AS NUMERIC(12,2)) AS TOTAL_GP_AMT,
        CAST(TRIM(W1TPFM) AS NUMERIC(9,6)) AS TOTAL_PROFIT_MARGIN,
        CAST(TRIM(W1TGPN) AS NUMERIC(12,2)) AS TOTAL_GP_NAB_AMT,
        CAST(TRIM(W1TNPM) AS NUMERIC(9,6)) AS TOTAL_NAB_PROFIT_MARGIN,
        CAST(TRIM(W1TSPF) AS NUMERIC(12,2)) AS TOTAL_SPIFF_AMT,
        CAST(TRIM(W1TSPP) AS NUMBER(3, 0)) AS TOTAL_SPIFF_POINTS,
        CAST(TRIM(W1TTFE) AS NUMERIC(12,2)) AS TOTAL_TIRE_FEE,
        CAST(TRIM(W1NTPR) AS NUMBER(10, 0)) AS NUMBER_OF_TIMES_PRINTED,
        CAST(TRIM(W1NCDU) AS NUMERIC(9,2)) AS NAB_CREDIT_DUE,
        CAST(TRIM(W1NCRV) AS NUMERIC(9,2)) AS NAB_CREDIT_RECEIVED,
        CAST(TRIM(W1NCPD) AS NUMERIC(9,6)) AS NAB_CREDIT_PENDING,
        
        -- Additional dimension fields
        CAST(TRIM(W1ARST) AS NUMERIC(20, 0)) AS CREDITED_SALES_REP_STORE_NUMBER,
        CAST(TRIM(W1ARRP) AS NUMERIC(20, 0)) AS CREDITED_SALES_REP_NUMBER,
        CAST(TRIM(W1STOREO) AS NUMERIC(20, 0)) AS ORIGIN_INVOICED_STORE_NUMBER,
        CAST(TRIM(W1FMTPO) AS NUMERIC(10, 0)) AS ORIGIN_FORM_TYPE_NUMBER,
        TRIM(W1WIPXO) AS ORIGIN_INVOICED_POS_PREFIX,
        CAST(TRIM("W1WO#O") AS NUMERIC(10, 0)) AS ORIGIN_INVOICED_WORK_ORDER_NUMBER,
        TRIM(W1CPAT) AS CORP_AUTH_ASKED_FLAG
        
        
        
        -- Audit columns
        CAST(TRIM(SOURCE_SYSTEM) AS VARCHAR(100)) AS SOURCE_SYSTEM,
        CAST(TRIM(SOURCE_FILE_NAME) AS VARCHAR(255)) AS SOURCE_FILE_NAME,
        CAST(TRIM(BATCH_ID) AS VARCHAR(100)) AS BATCH_ID,
        CAST(TRIM(ETL_VERSION) AS VARCHAR(50)) AS ETL_VERSION,
        CAST(TRIM(OPERATION) AS VARCHAR(10)) AS OPERATION,
        
        -- Create a tracking hash for change detection
        MD5(CONCAT(
            COALESCE(TRIM(W1NAME), ''),
            COALESCE(TRIM(W1ADD1), ''),
            COALESCE(TRIM(W1ADD2), ''),
            COALESCE(TRIM(W1ADD3), ''),
            COALESCE(TRIM(W1CITY), ''),
            COALESCE(TRIM(W1ST), ''),
            COALESCE(TRIM(W1ZIP), ''),
            COALESCE(TRIM(W1WKPH), ''),
            COALESCE(TRIM(W1HMPH), ''),
            COALESCE(TRIM(W1TERM), ''),
            COALESCE(TRIM(W1TAXC), ''),
            COALESCE(TRIM(W1TXDS), ''),
            COALESCE(TRIM(W1BILL), ''),
            COALESCE(TRIM(W1DRVR), ''),
            COALESCE(TRIM(W1PONO), ''),
            COALESCE(TRIM(W1SHNM), ''),
            COALESCE(TRIM(W1SHAD1), ''),
            COALESCE(TRIM(W1SHAD2), ''),
            COALESCE(TRIM(W1SHAD3), ''),
            COALESCE(TRIM(W1SHCTY), ''),
            COALESCE(TRIM(W1SHST), ''),
            COALESCE(TRIM(W1SHZIP), ''),
            COALESCE(TRIM(W1WOST), ''),
            COALESCE(TRIM(W1HOLD), ''),
            COALESCE(TRIM(W1QASK), ''),
            COALESCE(TRIM(W1COMM), ''),
            COALESCE(TRIM(W1ACTR), ''),
            COALESCE(TRIM(W1PMNT), ''),
            COALESCE(TRIM(W1PMTP), '')
        ))   AS RECORD_CHECKSUM_HASH,
        TO_TIMESTAMP_NTZ(TRIM(ENTRY_TIMESTAMP)) AS ENTRY_TIMESTAMP
    FROM {{ source('bronze_data', 'T_BRZ_HEADER_WOMSTH') }}
    {% if is_incremental() %}

    WHERE ENTRY_TIMESTAMP ='1900-01-01T00:00:00Z'

    {% endif %}
),

-- Step 2: Join with dimension tables to get surrogate keys
source_with_keys AS (
    SELECT
        sd.*,
        dt.DATE_SK AS TRANSACTION_DATE_SK,
        odt.DATE_SK AS ORIGIN_TRANSACTION_SK,
        srst.STORE_SK AS SALES_REP_STORE_SK,
        sr.SALES_REP_SK,
        c.CUSTOMER_SK,
        -- Additional surrogate keys for form types
        ft.FORM_TYPE_SK AS ORIGIN_FORM_TYPE_SK,
        ift.FORM_TYPE_SK AS ORIGIN_INVOICED_FORM_TYPE_SK,
        -- Additional surrogate keys for stores
        orst.STORE_SK AS ORIGIN_SALES_REP_STORE_SK,
        crst.STORE_SK AS CREDITED_SALES_REP_STORE_SK,
        ist.STORE_SK AS ORIGIN_INVOICED_STORE_SK,
        -- Additional surrogate keys for sales reps
        orsr.SALES_REP_SK AS ORIGIN_SALES_REP_SK,
        crsr.SALES_REP_SK AS CREDITED_SALES_REP_SK
    FROM source_data sd
    -- Date dimension lookups
    LEFT JOIN {{ source('silver_data', 'T_DIM_DATE') }} dt ON dt.DATE = sd.TRANSACTION_DATE AND dt.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ source('silver_data', 'T_DIM_DATE') }} odt ON odt.DATE = sd.ORIGIN_TRANSACTION_DATE AND odt.IS_CURRENT_FLAG = TRUE
    
    -- Store dimension lookups
    LEFT JOIN {{ ref('T_DIM_STORE') }} srst ON srst.STORE_NUMBER = sd.SALES_REP_STORE_NUMBER AND srst.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_STORE') }} orst ON orst.STORE_NUMBER = sd.ORIGIN_SALES_REP_STORE_NUMBER AND orst.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_STORE') }} crst ON crst.STORE_NUMBER = sd.CREDITED_SALES_REP_STORE_NUMBER AND crst.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_STORE') }} ist ON ist.STORE_NUMBER = sd.ORIGIN_INVOICED_STORE_NUMBER AND ist.IS_CURRENT_FLAG = TRUE
    
    -- Sales rep dimension lookups
    LEFT JOIN {{ ref('T_DIM_SALES_REP') }} sr ON sr.SALES_REP_NUMBER = sd.SALES_REP_NUMBER AND sr.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_SALES_REP') }} orsr ON orsr.SALES_REP_NUMBER = sd.ORIGIN_SALES_REP_NUMBER AND orsr.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_SALES_REP') }} crsr ON crsr.SALES_REP_NUMBER = sd.CREDITED_SALES_REP_NUMBER AND crsr.IS_CURRENT_FLAG = TRUE
    
    -- Form type dimension lookups
    LEFT JOIN {{ ref('T_DIM_FORM_TYPE') }} ft ON ft.FORM_TYPE_CODE = sd.ORIGIN_FORM_TYPE_CODE AND ft.IS_CURRENT_FLAG = TRUE
    LEFT JOIN {{ ref('T_DIM_FORM_TYPE') }} ift ON ift.FORM_TYPE_CODE = sd.ORIGIN_INVOICED_FORM_TYPE_CODE AND ift.IS_CURRENT_FLAG = TRUE
    
    -- Customer dimension lookup
    LEFT JOIN {{ ref('T_DIM_CUSTOMER') }} c ON c.CUSTOMER_NUMBER = sd.CUSTOMER_NUMBER AND c.IS_CURRENT_FLAG = TRUE
)
    SELECT *,
           ROW_NUMBER() OVER (
               PARTITION BY STORE_NUMBER, FORM_TYPE_CODE, POS_PREFIX, WORK_ORDER_NUMBER 
               ORDER BY INGESTION_DTTM DESC
           ) AS row_num
    FROM source_with_keys limi 100;